
#pragma once


#include <iostream>
#include <time.h>
#include <Windows.h>
using namespace std;

#pragma region 배열
/**
▷ 배열이란
연속되는 나열된
동일한 자료형의 데이터는 N개 이상 선언해서 제어 및 관리가 가능한 기능을 의미한다
배열을 이용하면 간단하게 여러 데이터를 조작하는 것이 가능

c/c++ 언어의 배열 선언 방법

자료형 배열 이름 [ 배열 크기];
ex)
int values[5];		<- int형 데이터 5개를 보관할 수 있는 배열 선언
double dbValues[5];	<- double형 데이터 5개를 보관할 수 있는 배열 선언
int values[5];		<- int형 데이터 5개를 보관할 수 있는 배열 선언

배열의 크기는 기본적으로 리터럴 상수만을 지원한다
즉, 기본적으로 리터럴 상수만을 지원하지만 컴파일러에 따라서 심볼릭 상수 또는 변수를 이용해서 배열을 선언하는 것
또한 가능하다.

배열의 크기는 컴파일 타임에 결정되기 반면, 변수의 값은 런타임에 할당 되기 때문에 기본적으로 배열의 크기를 변수로
정의하는 것은 불가능하다.

▷ c/c++ 배열 접근 방법
배열은 [] (인덱스 연산자)와 인덱스 번호를 통해서 특정 데이터에 접근하는 것이 가능하며 인데스 범위는 0~ 배열의크기 -1을 지닌다

☆배열을 이용할 때는 잘못된 인덱스 번호를 통해서 데이터의 접근 시도하면 버그 또는 프로그램 종료 유발
인덱스 번호의 범위에 항상 항상 주의해야 한다.



▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷▷

 */
#pragma endregion 배열


namespace EXAMPLE_1
{
	void Example();
}