#pragma once
#include <iostream>
#include <Windows.h>
using namespace std;
/*

▷객체 지향 프로그래밍 OOP
코드의 재 사용성이 높고 코드의 관리가 용이하다
신뢰성이 높은 프로그래밍을 가능하게 한다

▷객체지향 4대 특징

1. 캡 인캡슐레이션
2. 상 인헤리턴스
3. 다 호모모피증
4. 추


▷5대 설계 원칙

SOLID
SRP	- Single Responsibility Principle			결합도 응집도
OCP - Open/Closed Principle
LSP - (LSP - Liskov Substitution Principle
ISP - Interface Segregation Principle
DIP - Dependency Inversion Principle

▷순가
▷추콘
▷인터페이스
▷가소

추상클래스
순수 가상함수가 1개 이상 있는 클래스

인터페이스
파스칼 + 헝가리언
	

class MainGame_02
{
public:
	static void main()
	{

	}
};

포트 폴리오 후보군 제출
단톡방에 올릴 것
후보 3개 추리고 선정 이유 작성
각 후보별 주요 기능 작성
참고한 영상 잇으면 유튜브 링크
에러 사항 기입


셋/겟 => 프로퍼티

LLL - low level language
LHL
MHL
HLL	- high level language c++



*/

__interface IGameClass
{
	virtual void idle() =0;
	virtual void walk() =0;
};


class MainGame_02
{
public:
	static void main()
	{
		int c;
		c = 0;
	}
};